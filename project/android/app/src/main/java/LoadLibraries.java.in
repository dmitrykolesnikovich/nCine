package @JAVA_PACKAGE@;

import android.app.NativeActivity;
import android.hardware.display.DisplayManager;
import android.os.Bundle;
import android.view.View;
import android.view.WindowInsets;
import android.view.WindowInsetsController;

public class LoadLibraries extends NativeActivity implements DisplayManager.DisplayListener {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// Hide toolbar
		int SDK_INT = android.os.Build.VERSION.SDK_INT;
		if (SDK_INT >= 19 && SDK_INT < 30) {
			setImmersiveSticky();

			View decorView = getWindow().getDecorView();
			decorView.setOnSystemUiVisibilityChangeListener(
				new View.OnSystemUiVisibilityChangeListener() {
					@Override
					public void onSystemUiVisibilityChange(int visibility) {
						setImmersiveSticky();
					}
				}
			);
		}
		else if (SDK_INT >= 30) {
			hideInsets();
		}

		// Register a display listener to update the monitors array
		DisplayManager dm = getSystemService(DisplayManager.class);
		dm.registerDisplayListener(this, null);
	}

	@Override
	protected void onResume() {
		super.onResume();

		// Hide toolbar
		int SDK_INT = android.os.Build.VERSION.SDK_INT;
		if (SDK_INT >= 11 && SDK_INT < 14) {
			getWindow().getDecorView().setSystemUiVisibility(View.STATUS_BAR_HIDDEN);
		}
		else if (SDK_INT >= 14 && SDK_INT < 19) {
			getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN |
			                                                 View.SYSTEM_UI_FLAG_LOW_PROFILE);
		}
		else if (SDK_INT >= 19 && SDK_INT < 30) {
			setImmersiveSticky();
		}
		else if (SDK_INT >= 30) {
			hideInsets();
		}
	}

	@Override
	public void onDisplayAdded(int displayId) {
		updateMonitors();
	}

	@Override
	public void onDisplayChanged(int displayId) {
		updateMonitors();
	}

	@Override
	public void onDisplayRemoved(int displayId) {
		updateMonitors();
	}

	void setImmersiveSticky() {
		View decorView = getWindow().getDecorView();
		decorView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_FULLSCREEN |
		                                View.SYSTEM_UI_FLAG_HIDE_NAVIGATION |
		                                View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY |
		                                View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |
		                                View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |
		                                View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
	}

	void hideInsets() {
		getWindow().setDecorFitsSystemWindows(false);
		WindowInsetsController controller = getWindow().getInsetsController();
		controller.hide(WindowInsets.Type.statusBars() |
						WindowInsets.Type.navigationBars());
		controller.setSystemBarsBehavior(WindowInsetsController.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE);
	}

	// Calls `EglGfxDevice::updateMonitorsCallback()`
	private native void updateMonitors();

	static {
		@JAVA_SYSTEM_LOADLIBRARY_OPENAL@
		@JAVA_SYSTEM_LOADLIBRARY_NCINE@
		// It needs to be explicitly loaded for jnicall_functions to work (despite `android.app.lib_name`)
		try {
			System.loadLibrary("game");
		} catch (UnsatisfiedLinkError e) {
			System.err.println("Caught UnsatisfiedLinkError: " + e.getMessage());
		}
	}

}
